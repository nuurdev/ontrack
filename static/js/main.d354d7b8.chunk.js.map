{"version":3,"sources":["components/select.js","components/search.js","components/pagination.js","utils/bookTableSettings.js","utils/handleErrors.js","components/table.js","components/error.js","components/hooks/useBookQuery.js","components/app.js","serviceWorker.js","components/notFound.js","index.js"],"names":["Select","onChange","value","options","label","disabled","Form","Group","as","Row","Label","column","sm","Col","Control","map","option","key","Search","onSearch","onSubmit","e","preventDefault","target","elements","search","InputGroup","name","placeholder","aria-label","Append","Button","variant","type","Pagination","data","page","itemsPerPage","previousLabel","nextLabel","breakLabel","pageCount","Math","ceil","count","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","pageLinkClassName","pageClassName","breakLinkClassName","breakClassName","activeClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","forcePage","disableInitialCallback","defaultSettings","searchTerm","itemsPerPageOptions","handleErrors","response","ok","Error","statusText","TableComponent","loading","Table","bordered","hover","responsive","Array","from","v","i","Object","keys","books","property","book","id","ErrorComponent","message","navigate","useNavigate","className","onClick","replace","getItemsPerPage","searchParams","includes","App","location","useLocation","parse","React","useState","setData","setLoading","error","setError","useEffect","body","filters","values","fetch","method","JSON","stringify","headers","then","json","catch","err","console","useBookQuery","Container","fluid","xs","searchTermString","length","newPageCount","style","overflowX","newPage","Number","selected","Badge","pill","Spinner","animation","Boolean","window","hostname","match","NotFound","to","ReactDOM","render","StrictMode","path","default","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d354d7b8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nexport const Select = ({ onChange, value, options, label, disabled }) => (\r\n  <fieldset disabled={disabled}>\r\n    <Form.Group as={Row}>\r\n      <Form.Label column sm=\"auto\">\r\n        {label}\r\n      </Form.Label>\r\n      <Col>\r\n        <Form.Control as=\"select\" onChange={onChange} value={value}>\r\n          {options.map((option) => (\r\n            <option key={option}>{option}</option>\r\n          ))}\r\n        </Form.Control>\r\n      </Col>\r\n    </Form.Group>\r\n  </fieldset>\r\n);\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\n\r\nexport const Search = ({ onSearch, disabled }) => (\r\n  <fieldset disabled={disabled}>\r\n    <Form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        const { value } = e.target.elements.search;\r\n        onSearch(value);\r\n      }}\r\n    >\r\n      <InputGroup>\r\n        <Form.Control\r\n          name=\"search\"\r\n          placeholder={\"Search for a book\"}\r\n          aria-label=\"Search for a book\"\r\n        />\r\n        <InputGroup.Append>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Search\r\n          </Button>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n    </Form>\r\n  </fieldset>\r\n);\r\n","import React from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nexport const Pagination = ({ onChange, data, page, itemsPerPage }) => (\r\n  <ReactPaginate\r\n    previousLabel={\"previous\"}\r\n    nextLabel={\"next\"}\r\n    breakLabel={\"...\"}\r\n    pageCount={data ? Math.ceil(data.count / itemsPerPage) : 100}\r\n    marginPagesDisplayed={2}\r\n    pageRangeDisplayed={5}\r\n    onPageChange={onChange}\r\n    containerClassName={\"pagination\"}\r\n    subContainerClassName={\"pages pagination\"}\r\n    pageLinkClassName={\"page-link\"}\r\n    pageClassName={\"page-item\"}\r\n    breakLinkClassName={\"page-link\"}\r\n    breakClassName={\"page-item\"}\r\n    activeClassName={\"active\"}\r\n    previousClassName={\"page-item\"}\r\n    previousLinkClassName={\"page-link\"}\r\n    nextClassName={\"page-item\"}\r\n    nextLinkClassName={\"page-link\"}\r\n    forcePage={page - 1}\r\n    disableInitialCallback\r\n  />\r\n);\r\n","export const defaultSettings = {\r\n  page: 1,\r\n  itemsPerPage: 20,\r\n  searchTerm: \"\",\r\n  itemsPerPageOptions: [10, 20, 50, 100, 200],\r\n};\r\n","export const handleErrors = (response) => {\r\n  if (!response.ok) {\r\n    throw Error(response.statusText);\r\n  }\r\n  return response;\r\n};\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nexport const TableComponent = ({ data, loading }) =>\r\n  loading ? (\r\n    <Table bordered hover responsive>\r\n      <thead>\r\n        <tr>\r\n          {Array.from(Array(7)).map((v, i) => (\r\n            <td key={i}>\r\n              <Skeleton />\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {Array.from(Array(10)).map((v, i) => (\r\n          <tr key={i}>\r\n            {Array.from(Array(7)).map((v, i) => (\r\n              <td key={i}>\r\n                <Skeleton />\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  ) : (\r\n    <Table bordered hover responsive>\r\n      <thead>\r\n        <tr>\r\n          {Object.keys(data.books[0]).map((property) => (\r\n            <td key={property}>{property}</td>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.books.map((book) => (\r\n          <tr key={book.id}>\r\n            {Object.keys(book).map((property) => (\r\n              <td key={property}>{book[property]}</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useNavigate } from \"@reach/router\";\r\n\r\nexport const ErrorComponent = ({ message }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const onNavigateRoot = () => navigate(\"/\", { replace: true });\r\n\r\n  return (\r\n    <div className=\"container my-3\">\r\n      <div className=\"my-3\">\r\n        <h5>Oops something went wrong</h5>\r\n        <span>Error message: {message}</span>\r\n      </div>\r\n      <Button variant=\"primary\" onClick={onNavigateRoot}>\r\n        Try again\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useLocation } from \"@reach/router\";\r\nimport { defaultSettings, handleErrors } from \"../../utils\";\r\nimport { parse } from \"query-string\";\r\n\r\nexport const useBookQuery = () => {\r\n  const location = useLocation();\r\n  const searchParams = parse(location.search);\r\n\r\n  const page = +searchParams.page || defaultSettings.page;\r\n  const searchTerm = searchParams.searchTerm || defaultSettings.searchTerm;\r\n  const itemsPerPage = getItemsPerPage(searchParams);\r\n\r\n  const [data, setData] = React.useState(null);\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [error, setError] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    setLoading(true);\r\n    setError(null);\r\n    const body = {\r\n      page,\r\n      itemsPerPage,\r\n      filters: [{ type: \"all\", values: [searchTerm] }],\r\n    };\r\n\r\n    fetch(`http://nyx.vima.ekt.gr:3000/api/books/`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(body),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then(handleErrors)\r\n      .then((response) => response.json())\r\n      .then((data) => setData(data))\r\n      .then(() => setLoading(false))\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setError(err);\r\n      });\r\n  }, [page, itemsPerPage, searchTerm]);\r\n\r\n  return [page, searchTerm, itemsPerPage, data, loading, error];\r\n};\r\n\r\nconst getItemsPerPage = (searchParams) => {\r\n  if (\r\n    defaultSettings.itemsPerPageOptions.includes(+searchParams.itemsPerPage)\r\n  ) {\r\n    return +searchParams.itemsPerPage;\r\n  } else {\r\n    return defaultSettings.itemsPerPage;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { Select } from \"./select\";\r\nimport { Search } from \"./search\";\r\nimport { Pagination } from \"./pagination\";\r\nimport { useNavigate } from \"@reach/router\";\r\nimport { defaultSettings } from \"../utils\";\r\nimport { TableComponent } from \"./table\";\r\nimport { ErrorComponent } from \"./error\";\r\nimport { useBookQuery } from \"./hooks/useBookQuery\";\r\n\r\nconst App = () => {\r\n  const navigate = useNavigate();\r\n  const [page, searchTerm, itemsPerPage, data, loading, error] = useBookQuery();\r\n\r\n  const handlePageChange = (data) => {\r\n    const newPage = Number(data.selected) + 1;\r\n    navigate(\r\n      `/?page=${newPage}&itemsPerPage=${itemsPerPage}&searchTerm=${searchTerm}`\r\n    );\r\n  };\r\n\r\n  const handleItemsPerPageChange = (e) => {\r\n    const { value } = e.target;\r\n    const newPageCount = Math.ceil(data.count / value);\r\n    if (newPageCount < page) {\r\n      navigate(\r\n        `/?page=${newPageCount}&itemsPerPage=${value}&searchTerm=${searchTerm}`\r\n      );\r\n    } else {\r\n      navigate(`/?page=${page}&itemsPerPage=${value}&searchTerm=${searchTerm}`);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (searchTermString) => {\r\n    navigate(\r\n      `/?page=${1}&itemsPerPage=${itemsPerPage}&searchTerm=${searchTermString}`\r\n    );\r\n  };\r\n\r\n  const handleRemoveSearch = () => {\r\n    navigate(`/?page=${1}&itemsPerPage=${itemsPerPage}`);\r\n  };\r\n\r\n  if (error) {\r\n    return <ErrorComponent message={error.message} />;\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"my-5\">\r\n      <div className=\"my-3\">\r\n        <h2>OnTrack Application</h2>\r\n      </div>\r\n\r\n      <Row className=\"controls-wrapper\">\r\n        {data && (\r\n          <Col xs={9} sm={6}>\r\n            <Search onSearch={handleSearch} disabled={loading} />\r\n          </Col>\r\n        )}\r\n\r\n        {data && data.books.length > 0 && (\r\n          <Col xs={\"auto\"}>\r\n            <Select\r\n              onChange={handleItemsPerPageChange}\r\n              value={itemsPerPage}\r\n              options={defaultSettings.itemsPerPageOptions}\r\n              label={\"Items per page\"}\r\n              disabled={loading}\r\n            />\r\n          </Col>\r\n        )}\r\n\r\n        {data && data.books.length > 0 && (\r\n          <Col sm={12} style={{ overflowX: \"auto\" }}>\r\n            <Pagination\r\n              onChange={handlePageChange}\r\n              data={data}\r\n              page={page}\r\n              itemsPerPage={itemsPerPage}\r\n            />\r\n          </Col>\r\n        )}\r\n      </Row>\r\n\r\n      {data && (\r\n        <Row>\r\n          <>\r\n            <Col xs={6}>\r\n              <span>\r\n                Returned <strong>{data.count}</strong> result(s)\r\n                {searchTerm && ` for `}\r\n              </span>\r\n              {searchTerm && (\r\n                <Badge\r\n                  pill\r\n                  variant=\"secondary\"\r\n                  as={Button}\r\n                  aria-label=\"Remove search\"\r\n                  onClick={handleRemoveSearch}\r\n                >\r\n                  {searchTerm} x\r\n                </Badge>\r\n              )}\r\n            </Col>\r\n            {data && data.books.length > 0 && (\r\n              <Col xs={6}>\r\n                <span>\r\n                  Page <strong>{page}</strong> of{\" \"}\r\n                  {Math.ceil(data.count / itemsPerPage)}\r\n                </span>\r\n              </Col>\r\n            )}\r\n          </>\r\n        </Row>\r\n      )}\r\n\r\n      {loading && !data && (\r\n        <Row>\r\n          <Col>\r\n            <Spinner animation=\"border\" variant=\"primary\" />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n\r\n      {data && data.books.length > 0 && (\r\n        <Row className=\"table-wrapper mt-4\">\r\n          <Col>\r\n            <TableComponent data={data} loading={loading} />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nexport const NotFound = () => {\r\n  return (\r\n    <Container fluid className=\"my-5\">\r\n      <h1>404 not found.</h1>\r\n      <Link to=\"/\">Back to home page</Link>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/app\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Router } from \"@reach/router\";\r\nimport { NotFound } from \"./components/notFound\";\r\n\r\nimport \"./styles/global.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App path=\"/\" />\r\n      <NotFound default />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}